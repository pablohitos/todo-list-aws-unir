pipeline {
    agent none

    environment {
        AWS_DEFAULT_REGION = 'us-east-1'
        STAGE_BUCKET = 'staging-todo-list-aws-pablo'
        PROD_BUCKET = 'production-todo-list-aws-pablo'
        STAGE_STACK = 'staging-todo-list-aws'
        PROD_STACK = 'production-todo-list-aws'
        STAGE = 'default'
        PROD = 'production'
        PROD_URL = 'https://wjjvpkiebg.execute-api.us-east-1.amazonaws.com/Prod'
    }

    stages {
        stage('Checkout') {
            agent { label 'master' } // o 'built-in' si no tienes master
            steps {
                echo 'Clonando repositorio desde develop...'
                git credentialsId: 'github-token', url: 'https://github.com/pablohitos/todo-list-aws-unir', branch: 'develop'
            }
        }

        stage('Análisis Estático - Flake8') {
            agent { label 'agent-estatico' }
            steps {
                checkout scm
                echo 'Ejecutando Flake8...'
                sh 'flake8 src --format=default --exit-zero'
                archiveArtifacts artifacts: '**/*.log', allowEmptyArchive: true
            }
        }

        stage('Análisis de Seguridad - Bandit') {
            agent { label 'agent-estatico' }
            steps {
                checkout scm
                echo 'Ejecutando Bandit...'
                sh 'bandit -r src -f json -o bandit-report.json'
                archiveArtifacts artifacts: 'bandit-report.json', allowEmptyArchive: true
            }
        }

        stage('Despliegue Staging') {
            agent { label 'master' }
            steps {
                checkout scm
                echo 'Desplegando entorno Staging con SAM...'
                sh 'sam build'
                sh 'sam validate --region ${AWS_DEFAULT_REGION}'
                sh """
                    sam deploy \
                        --stack-name ${STAGE_STACK} \
                        --s3-bucket ${STAGE_BUCKET} \
                        --capabilities CAPABILITY_IAM \
                        --region ${AWS_DEFAULT_REGION} \
                        --parameter-overrides Stage=${STAGE} \
                        --no-fail-on-empty-changeset
                """
            }
        }

        stage('Pruebas REST en Staging') {
            agent { label 'jenkins-agent-api' }
            steps {
                checkout scm
                echo 'Ejecutando pruebas REST en Staging...'
                sh '''
                    export PYTHONPATH=:$WORKSPACE/src
                    export BASE_URL=https://wjjvpkiebg.execute-api.us-east-1.amazonaws.com/Prod
                    pytest test/unit/ --junitxml=result.xml
                '''
                junit 'result.xml'
            }
        }

        stage('Promoción a main') {
            agent { label 'agent-estatico' }
            steps {
                checkout scm
                echo 'Promoviendo cambios a rama main...'
                withCredentials([usernamePassword(credentialsId: 'github-token-userpass', passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) {
                    sh '''
                        git config --global user.email "jenkins@example.com"
                        git config --global user.name "Jenkins"
                        git checkout main
                        git merge origin/develop
                        git push https://${GIT_USERNAME}:${GIT_PASSWORD}@github.com/pablohitos/todo-list-aws-unir main
                    '''
                }
            }
        }

        stage('Despliegue Producción') {
            agent { label 'master' }
            steps {
                echo 'Desplegando entorno Producción con SAM...'
                sh 'sam build'
                sh 'sam validate --region ${AWS_DEFAULT_REGION}'
                sh """
                    sam deploy \
                        --stack-name ${PROD_STACK} \
                        --s3-bucket ${PROD_BUCKET} \
                        --capabilities CAPABILITY_IAM \
                        --region ${AWS_DEFAULT_REGION} \
                        --parameter-overrides Stage=${PROD} \
                        --no-fail-on-empty-changeset
                """
            }
        }

        stage('Pruebas REST Producción') {
            agent { label 'jenkins-agent-api' }
            steps {
                echo 'Ejecutando pruebas de lectura en Producción con Pytest...'
                sh '''
                    export PYTHONPATH=:$WORKSPACE/src
                    export BASE_URL=${PROD_URL}
                    pytest test/integration/todoApiTest.py --junitxml=result.xml
                '''
                junit 'result.xml'
            }
        }
    }

    post {
        always {
            echo 'Pipeline CI/CD completo finalizado.'
        }
    }
}
