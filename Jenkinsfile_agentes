pipeline {
    agent { label 'jenkins-agent-api' }

    environment {
        AWS_DEFAULT_REGION = 'us-east-1'
        S3_BUCKET = 'production-todo-list-aws-pablo'
        STACK_NAME = 'production-todo-list-aws'
        STAGE = 'production'
        BASE_URL = 'https://wjjvpkiebg.execute-api.us-east-1.amazonaws.com/Prod'
    }

    stages {
        stage('Checkout') {
            steps {
                sh 'whoami && hostname'
                echo 'Clonando rama main...'
                git credentialsId: 'github-token', url: 'https://github.com/pablohitos/todo-list-aws-unir', branch: 'main'

                echo 'Clonando configuración del entorno Producción...'
                sh '''
                    rm -rf config
                    git clone --single-branch --branch production https://github.com/pablohitos/todo-list-aws-config.git config
                    cp config/samconfig.toml .
                '''
            }
        }

        stage('Despliegue Producción') {
            steps {
                sh 'whoami && hostname'
                echo 'Desplegando entorno Producción con SAM usando configuración externa...'
                sh 'sam build'
                sh 'sam validate --region ${AWS_DEFAULT_REGION}'
                sh 'sam deploy --config-env production --no-fail-on-empty-changeset'
            }
        }

        stage('Pruebas de Lectura (Pytest)') {
            steps {
                sh 'whoami && hostname'
                echo "Ejecutando pruebas de solo lectura con Pytest contra ${BASE_URL}..."
                sh '''
                    export PYTHONPATH=:$WORKSPACE/src
                    export BASE_URL=${BASE_URL}
                    pytest test/integration/todoApiTest.py --junitxml=result.xml
                '''
                archiveArtifacts artifacts: 'result.xml', fingerprint: true
            }
        }
    }

    post {
        always {
            node(label: 'agent-estatico') {
                echo 'Pipeline de entrega continua (CD) finalizado.'
                step([
                    $class: 'CopyArtifact',
                    projectName: env.JOB_NAME,
                    selector: [$class: 'SpecificBuildSelector', buildNumber: env.BUILD_NUMBER],
                    filter: 'result.xml'
                ])
                junit 'result.xml'
            }
        }
    }
}
